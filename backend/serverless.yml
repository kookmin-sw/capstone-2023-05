service: serverless-naruhodoo

frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.9
  region: ap-northeast-2
  profile: ${env:AWS_PROFILE}
  stage: ${opt:stage, env:PRIVATE_STAGE}
  environment:
    POSTGRES_HOST: ${self.custom.POSTGRES_HOST.${self.provider.stage}}
    POSTGRES_PORT: ${self.custom.POSTGRES_PORT.${self.provider.stage}}
    POSTGRES_USER: ${self.custom.POSTGRES_USER.${self.provider.stage}}
    POSTGRES_PASSWORD: ${self.custom.POSTGRES_PASSWORD.${self.provider.stage}}
    POSTGRES_DB: ${self.custom.POSTGRES_DB.${self.provider.stage}}
    REDIS_HOST: ${self.custom.REDIS_HOST.${self.provider.stage}}
    REDIS_PORT: ${self.custom.REDIS_PORT.${self.provider.stage}}
    REDIS_DB: ${self.custom.REDIS_DB.${self.provider.stage}}

package:
  patterns:
    - "!**"
    - "src/**"
    - "requirements.txt"

functions:
  hello:
    handler: src/lambda/handler.hello
    events:
      - http:
          path: /hello
          method: get

custom:
  POSTGRES_HOST:
    dev: ${ssm:/naruhodoo/dev/postgres/host}
    # prod: ${ssm:/naruhodoo/prod/postgres/host}
  POSTGRES_PORT:
    dev: ${ssm:/naruhodoo/dev/postgres/port}
    # prod: ${ssm:/naruhodoo/prod/postgres/port}
  POSTGRES_USER:
    dev: ${ssm:/naruhodoo/dev/postgres/user}
    # prod: ${ssm:/naruhodoo/prod/postgres/user}
  POSTGRES_PASSWORD:
    dev: ${ssm:/naruhodoo/dev/postgres/password}
    # prod: ${ssm:/naruhodoo/prod/postgres/password}
  POSTGRES_DB:
    dev: ${ssm:/naruhodoo/dev/postgres/db}
    # prod: ${ssm:/naruhodoo/prod/postgres/db}
  # REDIS_HOST:
  #   dev: ${ssm:/naruhodoo/dev/redis/host}
  #   prod: ${ssm:/naruhodoo/prod/redis/host}
  # REDIS_PORT:
  #   dev: ${ssm:/naruhodoo/dev/redis/port}
  #   prod: ${ssm:/naruhodoo/prod/redis/port}
  # REDIS_DB:
  #   dev: ${ssm:/naruhodoo/dev/redis/db}
  #   prod: ${ssm:/naruhodoo/prod/redis/db}
  customDomain:
    domainName: ${env:CUSTOM_DOMAIN}
    stage: ${self:provider.stage}
    basePath: ${self:provider.stage}
    certificateName: ${env:CERTIFICATE_NAME}
    createRoute53Record: true

plugins:
  - serverless-python-requirements
  - serverless-domain-manager
